load-module tsffs
@tsffs = SIM_create_object(SIM_get_class("tsffs"), "tsffs", [])
tsffs.log-level 4
@tsffs.iface.tsffs.set_start_on_harness(True)
@tsffs.iface.tsffs.set_stop_on_harness(True)
@tsffs.iface.tsffs.set_timeout(10.0)
@tsffs.iface.tsffs.add_exception_solution(13)
@tsffs.iface.tsffs.add_exception_solution(14)
@tsffs.iface.tsffs.set_generate_random_corpus(True)
@tsffs.iface.tsffs.set_use_snapshots(True)
@tsffs.iface.tsffs.set_cmplog_enabled(True)

load-module uefi-fw-tracker

load-target "qsp-x86/qsp-uefi-custom" namespace = qsp machine:hardware:firmware:bios = "/input/local_test/src/Build/SimicsOpenBoardPkg/BoardX58Ich10/DEBUG_CLANGSAN/FV/BOARDX58ICH10.fd" machine:hardware:storage:disk0:image = "minimal_boot_disk.craff"

new-os-awareness name = qsp.software
qsp.software.insert-tracker tracker = uefi_fw_tracker_comp
qsp.software.tracker.detect-parameters -overwrite param-file = "uefi.params" map-file = "/input/local_test/src/Build/SimicsOpenBoardPkg/BoardX58Ich10/DEBUG_CLANGSAN/SimicsX58.map"
qsp.software.tracker.load-parameters "uefi.params"
qsp.software.enable-tracker


script-branch {
    local $con = qsp.console.con
    bp.console_string.wait-for qsp.serconsole.con "End Load Options Dumping"
    bp.time.wait-for seconds = 30    
    qsp.console.con.input "FS0:\n"
    bp.time.wait-for seconds = 5
    local $manager = (start-agent-manager)
    qsp.console.con.input ("SimicsAgent.efi --download " + (lookup-file "/input/local_test/src/Build/SimicsOpenBoardPkg/BoardX58Ich10/DEBUG_CLANGSAN/X64/Firness.efi") + "\n")
    bp.time.wait-for seconds = 5
    qsp.console.con.input "Firness.efi\n"
}

run